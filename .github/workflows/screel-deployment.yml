name: Screel Deployment
on: push
jobs:
  Lint: 
    runs-on: ubuntu-latest 
    steps:
      - name: Pull repo
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: depencency-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.ccache-hit != 'true'
        run: npm install 
      - name: run lint 
        run: npm run lint 
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Pull repo
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: depencency-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.ccache-hit != 'true'
        run: npm install 
      - name: Feedback
        run: echo "Testing project"
      - name: run test 
        id: run-test
        run: npm run test
        if: failure() && steps.run-tests.outcome == 'failure'
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json 
  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Pull repo
        uses: actions/checkout@v3
      - name: cache dependencies
        uses: actions/cache@v3
        with: 
          path: ~/.npm
          key: depencency-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.ccache-hit != 'true'
        run: npm install 
      - name: Feedback
        run: echo "Building project..."
      - name: run build 
        run: npm run build 
      - name: Upload artifacts 
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Get build artifacts 
        uses: actions/download-artifact@v3
        with: 
          name: dist-files 
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  Report: 
    needs: [lint, Test]
    if: failure()
    runs-on: ubuntu-latest
    steps:
    - name: Output Information
      run: |
        echo "${{ toJSON(github) }}"
